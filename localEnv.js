// Generated by CoffeeScript 1.8.0
(function() {
  var LLApiConfigData, LLApiConfigFilePath, battleServerConfigData, battleServerFilePath, cardConfigUrl, fs, http, phpConfigFilePath, server, serverConfig;

  http = require('http');

  fs = require('fs');

  serverConfig = {
    melot: {
      serverAd: 'http://10.0.1.82:9000/lostisland/',
      battleServerAd: 'http://10.0.1.82:1337',
      baseUrl: 'http://10.0.1.82:9000/lostisland/index.php/'
    },
    mac: {
      serverAd: 'http://lostisland/',
      battleServerAd: 'http://localhost:1337',
      baseUrl: 'http://lostisland/index.php/'
    },
    hp: {
      serverAd: 'http://192.168.2.1/',
      battleServerAd: 'http://192.168.2.1:1337',
      baseUrl: 'http://192.168.2.1/index.php/'
    },
    android:{
      serverAd: 'http://192.168.1.104/',
      battleServerAd: 'http://192.168.2.1:1337',
      baseUrl: 'http://192.168.1.104/index.php/'
    }
  };

  server = serverConfig.mac;

  cardConfigUrl = 'apis/route?fn=2001&param={"type":"saber"}';
  heroConfigUrl = 'apis/route?fn=2001&param={"type":"hero"}';

  LLApiConfigFilePath = 'Public/js/apis/serverConfig.js';

  LLApiConfigData = 'LLApi.setServerPre("' + server.baseUrl + '");';

  phpConfigFilePath = 'application/config/config.php';

  battleServerFilePath = 'Public/js/battle/battleServerConfig.js';

  battleServerConfigData = 'var battleServerAd = "' + server.battleServerAd + '";';

  http.get(server.baseUrl + cardConfigUrl, function(_res) {
    var responseStr;
    responseStr = '';
    _res.on('data', function(_chunk) {
      return responseStr += _chunk;
    });
    return _res.on('end', function() {
      return console.log(responseStr);
    });
  });
  http.get(server.baseUrl + heroConfigUrl, function(_res) {
    var responseStr;
    responseStr = '';
    _res.on('data', function(_chunk) {
      return responseStr += _chunk;
    });
    return _res.on('end', function() {
      return console.log(responseStr);
    });
  });


  fs.writeFile(LLApiConfigFilePath, LLApiConfigData, function(_err) {
    if (_err) {
      return console.log(_err);
    } else {
      return console.log('set LLApi config success');
    }
  });

  fs.readFile(phpConfigFilePath, function(_err, _data) {
    var content;
    if (_err) {
      console.log(_err);
    }
    content = _data.toString();
    content = content.replace(/\$config\['base_url'\]([\s\S]{0,50});/, "$config['base_url']='" + server.serverAd + "';");
    return fs.writeFile(phpConfigFilePath, content, function(_err) {
      if (_err) {
        return console.log(_err);
      } else {
        return console.log('set base_url success');
      }
    });
  });

  fs.writeFile(battleServerFilePath, battleServerConfigData, function(_err) {
    if (_err) {
      return console.log(_err);
    } else {
      return console.log('set battleServerAd success');
    }
  });

}).call(this);
